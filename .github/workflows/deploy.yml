name: App install and start

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: [self-hosted]

    steps:
      - uses: actions/checkout@v2
        with:
          clean: false

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        working-directory: src
        run: npm install

      - name: Stop old server (ignore error)
        run: |
          npx pm2 kill

      - name: Remove old server in ~/ethereum-collector (ignore error)
        run: |
          rm -rf ~/ethereum-collector || true

      - name: Copy new server to ~/ethereum-collector
        run: |
          mkdir -p ~/ethereum-collector
          cp -R ./ ~/ethereum-collector

      - name: create env file
        run: |
          cd ~/ethereum-collector
          touch .env
          echo SECRET=${{ secrets.SECRET }} >> .env
          echo AWS_ACCESS_ID=${{ secrets.AWS_ACCESS_ID }} >> .env
          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
          echo OPERATOR_ID=${{ secrets.OPERATOR_ID }} >> .env
          echo HOST=${{ secrets.HOST }} >> .env
          echo MYSQL_PORT=${{ secrets.MYSQL_PORT }} >> .env
          echo USERNAME=${{ secrets.USERNAME }} >> .env
          echo PASSWORD=${{ secrets.PASSWORD }} >> .env
          echo DATABASE=${{ secrets.DATABASE }} >> .env
          echo ALIGO_API_KEY=${{ secrets.ALIGO_API_KEY }} >> .env
          echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
          echo OPENSEA_API_KEY=${{ secrets.OPENSEA_API_KEY }} >> .env
          echo KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} >> .env

      - name: Run new server (in background)
        env:
          RUNNER_TRACKING_ID: ""
          SECRET: ${{ secrets.SECRET }}
          AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          OPERATOR_ID: ${{ secrets.OPERATOR_ID }}
          HOST: ${{ secrets.HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          DATABASE: ${{ secrets.DATABASE }}
          ALIGO_API_KEY: ${{ secrets.ALIGO_API_KEY }}
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          OPENSEA_API_KEY: ${{ secrets.OPENSEA_API_KEY }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
        run: |
          cd ~/ethereum-collector
          npx pm2 install typescript
          npm run tsc
          npx pm2 start ecosystem.config.js

      # - name: Add another folder
      #   run: |
      #     cd ..
      # - uses: actions/checkout@v2
      #   with:
      #     clean: false

      # - name: Use Node.js 16.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 16.x

      # - name: Install dependencies
      #   working-directory: src
      #   run: npm install

      # - name: Remove old server in ~/ethereum-collector (ignore error)
      #   run: |
      #     rm -rf ~/ethereum-collector2 || true

      # - name: Copy new server to ~/ethereum-collector2
      #   run: |
      #     mkdir -p ~/ethereum-collector2
      #     cp -R ./ ~/ethereum-collector2

      # - name: create env file
      #   run: |
      #     cd ~/ethereum-collector2
      #     touch .env
      #     echo PORT=${{ secrets.PORT2 }} >> .env
      #     echo SECRET=${{ secrets.SECRET }} >> .env
      #     echo AWS_ACCESS_ID=${{ secrets.AWS_ACCESS_ID }} >> .env
      #     echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
      #     echo OPERATOR_ID=${{ secrets.OPERATOR_ID }} >> .env
      #     echo HOST=${{ secrets.HOST }} >> .env
      #     echo MYSQL_PORT=${{ secrets.MYSQL_PORT }} >> .env
      #     echo USERNAME=${{ secrets.USERNAME }} >> .env
      #     echo PASSWORD=${{ secrets.PASSWORD }} >> .env
      #     echo DATABASE=${{ secrets.DATABASE }} >> .env
      #     echo ALIGO_API_KEY=${{ secrets.ALIGO_API_KEY }} >> .env
      #     echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
      #     echo OPENSEA_API_KEY=${{ secrets.OPENSEA_API_KEY }} >> .env
      #     echo KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} >> .env

      # - name: Run new server (in background)
      #   env:
      #     RUNNER_TRACKING_ID: ""
      #     PORT: ${{ secrets.PORT2 }}
      #     SECRET: ${{ secrets.SECRET }}
      #     AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
      #     AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      #     OPERATOR_ID: ${{ secrets.OPERATOR_ID }}
      #     HOST: ${{ secrets.HOST }}
      #     MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      #     USERNAME: ${{ secrets.USERNAME }}
      #     PASSWORD: ${{ secrets.PASSWORD }}
      #     DATABASE: ${{ secrets.DATABASE }}
      #     ALIGO_API_KEY: ${{ secrets.ALIGO_API_KEY }}
      #     ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
      #     OPENSEA_API_KEY: ${{ secrets.OPENSEA_API_KEY }}
      #     KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      #   run: |
      #     cd ~/ethereum-collector2
      #     npx pm2 install typescript
      #     npm run tsc
      #     npx pm2 start ecosystem.config.js --name collector2 &

# 참고자료
# https://velog.io/@ron/Github-Action-%EC%9C%BC%EB%A1%9C-%EB%AC%BC%EB%A6%AC%EC%84%9C%EB%B2%84%EC%97%90-%EC%9E%90%EB%8F%99%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0

