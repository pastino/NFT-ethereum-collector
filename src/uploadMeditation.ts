import multer from "multer";
import aws from "aws-sdk";
import multerS3 from "multer-s3";
import { Request, Response } from "express";

const s3 = new aws.S3({
  accessKeyId: process.env.AWS_ACCESS_ID,
  secretAccessKey: process.env.AWS_ACCESS_KEY,
  region: "ap-northeast-2",
});

const upload = multer({
  storage: multerS3({
    s3,
    bucket: "zama-assets",
    metadata: function (req, file, cb) {
      cb(null, { fieldName: file.fieldname });
    },
    key: function (req, file, cb) {
      const basePath =
        file.fieldname === "file"
          ? "audios/"
          : file.fieldname === "thumbnail"
          ? "images/"
          : "";
      cb(null, basePath + Date.now().toString() + "_" + file.originalname);
    },
  }),
});

export const uploadMiddleware = upload.fields([
  { name: "thumbnail" },
  { name: "file" },
]);

export const uploadController = (req: Request, res: Response) => {
  const { files }: any = req;
  console.log(files);
  const thumbnail = files?.thumbnail;
  const audio = files?.file;
  if (thumbnail) {
    console.log(thumbnail.location);
    return res.json({ location: thumbnail.map((obj: any) => obj.location) });
  }
  if (audio) {
    console.log(audio);
    return res.json({ location: audio.map((obj: any) => obj.location) });
  }
};

// ref *2> IncomingMessage {
//   _readableState: ReadableState {
//     objectMode: false,
//     highWaterMark: 16384,
//     buffer: BufferList { head: null, tail: null, length: 0 },
//     length: 0,
//     pipes: [],
//     flowing: false,
//     ended: true,
//     endEmitted: true,
//     reading: false,
//     sync: false,
//     needReadable: false,
//     emittedReadable: false,
//     readableListening: true,
//     resumeScheduled: false,
//     errorEmitted: false,
//     emitClose: true,
//     autoDestroy: false,
//     destroyed: false,
//     errored: null,
//     closed: false,
//     closeEmitted: false,
//     defaultEncoding: 'utf8',
//     awaitDrainWriters: null,
//     multiAwaitDrain: false,
//     readingMore: false,
//     decoder: null,
//     encoding: null,
//     [Symbol(kPaused)]: true
//   },
//   _events: [Object: null prototype] {
//     end: [Function: clearRequestTimeout],
//     readable: [Function: bound ]
//   },
//   _eventsCount: 2,
//   _maxListeners: undefined,
//   socket: <ref *1> Socket {
//     connecting: false,
//     _hadError: false,
//     _parent: null,
//     _host: null,
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: [],
//       flowing: true,
//       ended: false,
//       endEmitted: false,
//       reading: true,
//       sync: false,
//       needReadable: true,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: false,
//       destroyed: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       defaultEncoding: 'utf8',
//       awaitDrainWriters: null,
//       multiAwaitDrain: false,
//       readingMore: false,
//       decoder: null,
//       encoding: null,
//       [Symbol(kPaused)]: false
//     },
//     _events: [Object: null prototype] {
//       end: [Array],
//       timeout: [Function: socketOnTimeout],
//       data: [Function: bound socketOnData],
//       error: [Array],
//       close: [Array],
//       drain: [Function: bound socketOnDrain],
//       resume: [Function: onSocketResume],
//       pause: [Function: onSocketPause]
//     },
//     _eventsCount: 8,
//     _maxListeners: undefined,
//     _writableState: WritableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       finalCalled: false,
//       needDrain: false,
//       ending: false,
//       ended: false,
//       finished: false,
//       destroyed: false,
//       decodeStrings: false,
//       defaultEncoding: 'utf8',
//       length: 0,
//       writing: false,
//       corked: 0,
//       sync: true,
//       bufferProcessing: false,
//       onwrite: [Function: bound onwrite],
//       writecb: null,
//       writelen: 0,
//       afterWriteTickInfo: null,
//       buffered: [],
//       bufferedIndex: 0,
//       allBuffers: true,
//       allNoop: true,
//       pendingcb: 0,
//       prefinished: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false
//     },
//     allowHalfOpen: true,
//     _sockname: null,
//     _pendingData: null,
//     _pendingEncoding: '',
//     server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       _connections: 1,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::5002',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 17
//     },
//     _server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       _connections: 1,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::5002',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 17
//     },
//     parser: HTTPParser {
//       '0': [Function: bound setRequestTimeout],
//       '1': [Function: parserOnHeaders],
//       '2': [Function: parserOnHeadersComplete],
//       '3': [Function: parserOnBody],
//       '4': [Function: parserOnMessageComplete],
//       '5': [Function: bound onParserExecute],
//       '6': [Function: bound onParserTimeout],
//       _headers: [],
//       _url: '',
//       socket: [Circular *1],
//       incoming: [Circular *2],
//       outgoing: null,
//       maxHeaderPairs: 2000,
//       _consumed: true,
//       onIncoming: [Function: bound parserOnIncoming],
//       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
//     },
//     on: [Function: socketListenerWrap],
//     addListener: [Function: socketListenerWrap],
//     prependListener: [Function: socketListenerWrap],
//     _paused: false,
//     _httpMessage: ServerResponse {
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       outputData: [],
//       outputSize: 0,
//       writable: true,
//       destroyed: false,
//       _last: false,
//       chunkedEncoding: false,
//       shouldKeepAlive: true,
//       _defaultKeepAlive: true,
//       useChunkedEncodingByDefault: true,
//       sendDate: true,
//       _removedConnection: false,
//       _removedContLen: false,
//       _removedTE: false,
//       _contentLength: null,
//       _hasBody: true,
//       _trailer: '',
//       finished: false,
//       _headerSent: false,
//       socket: [Circular *1],
//       _header: null,
//       _keepAliveTimeout: 5000,
//       _onPendingData: [Function: bound updateOutgoingData],
//       _sent100: false,
//       _expect_continue: false,
//       req: [Circular *2],
//       locals: [Object: null prototype] {},
//       _startAt: undefined,
//       _startTime: undefined,
//       writeHead: [Function: writeHead],
//       __onFinished: [Function],
//       [Symbol(kCapture)]: false,
//       [Symbol(kNeedDrain)]: false,
//       [Symbol(corked)]: 0,
//       [Symbol(kOutHeaders)]: [Object: null prototype]
//     },
//     _peername: { address: '::1', family: 'IPv6', port: 52604 },
//     [Symbol(async_id_symbol)]: 20,
//     [Symbol(kHandle)]: TCP {
//       reading: true,
//       onconnection: null,
//       _consumed: true,
//       [Symbol(owner_symbol)]: [Circular *1]
//     },
//     [Symbol(kSetNoDelay)]: false,
//     [Symbol(lastWriteQueueSize)]: 0,
//     [Symbol(timeout)]: null,
//     [Symbol(kBuffer)]: null,
//     [Symbol(kBufferCb)]: null,
//     [Symbol(kBufferGen)]: null,
//     [Symbol(kCapture)]: false,
//     [Symbol(kBytesRead)]: 0,
//     [Symbol(kBytesWritten)]: 0,
//     [Symbol(RequestTimeout)]: undefined
//   },
//   httpVersionMajor: 1,
//   httpVersionMinor: 1,
//   httpVersion: '1.1',
//   complete: true,
//   headers: {
//     host: '6bb5-218-237-205-247.ngrok.io',
//     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) ReactNativeDebugger/0.11.9 Chrome/80.0.3987.165 Electron/8.5.2 Safari/537.36',
//     'content-length': '150',
//     accept: 'application/json, text/plain, */*',
//     'accept-encoding': 'gzip, deflate',
//     'accept-language': 'ko',
//     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryh12dSO2NrG3E2kPG',
//     'x-forwarded-for': '218.237.205.247',
//     'x-forwarded-proto': 'http'
//   },
//   rawHeaders: [
//     'Host',
//     '6bb5-218-237-205-247.ngrok.io',
//     'User-Agent',
//     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) ReactNativeDebugger/0.11.9 Chrome/80.0.3987.165 Electron/8.5.2 Safari/537.36',
//     'Content-Length',
//     '150',
//     'Accept',
//     'application/json, text/plain, */*',
//     'Accept-Encoding',
//     'gzip, deflate',
//     'Accept-Language',
//     'ko',
//     'Content-Type',
//     'multipart/form-data; boundary=----WebKitFormBoundaryh12dSO2NrG3E2kPG',
//     'X-Forwarded-For',
//     '218.237.205.247',
//     'X-Forwarded-Proto',
//     'http'
//   ],
//   trailers: {},
//   rawTrailers: [],
//   aborted: false,
//   upgrade: false,
//   url: '/api/upload',
//   method: 'POST',
//   statusCode: null,
//   statusMessage: null,
//   client: <ref *1> Socket {
//     connecting: false,
//     _hadError: false,
//     _parent: null,
//     _host: null,
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: [],
//       flowing: true,
//       ended: false,
//       endEmitted: false,
//       reading: true,
//       sync: false,
//       needReadable: true,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: false,
//       destroyed: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       defaultEncoding: 'utf8',
//       awaitDrainWriters: null,
//       multiAwaitDrain: false,
//       readingMore: false,
//       decoder: null,
//       encoding: null,
//       [Symbol(kPaused)]: false
//     },
//     _events: [Object: null prototype] {
//       end: [Array],
//       timeout: [Function: socketOnTimeout],
//       data: [Function: bound socketOnData],
//       error: [Array],
//       close: [Array],
//       drain: [Function: bound socketOnDrain],
//       resume: [Function: onSocketResume],
//       pause: [Function: onSocketPause]
//     },
//     _eventsCount: 8,
//     _maxListeners: undefined,
//     _writableState: WritableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       finalCalled: false,
//       needDrain: false,
//       ending: false,
//       ended: false,
//       finished: false,
//       destroyed: false,
//       decodeStrings: false,
//       defaultEncoding: 'utf8',
//       length: 0,
//       writing: false,
//       corked: 0,
//       sync: true,
//       bufferProcessing: false,
//       onwrite: [Function: bound onwrite],
//       writecb: null,
//       writelen: 0,
//       afterWriteTickInfo: null,
//       buffered: [],
//       bufferedIndex: 0,
//       allBuffers: true,
//       allNoop: true,
//       pendingcb: 0,
//       prefinished: false,
//       errorEmitted: false,
//       emitClose: false,
//       autoDestroy: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false
//     },
//     allowHalfOpen: true,
//     _sockname: null,
//     _pendingData: null,
//     _pendingEncoding: '',
//     server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       _connections: 1,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::5002',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 17
//     },
//     _server: Server {
//       maxHeaderSize: undefined,
//       insecureHTTPParser: undefined,
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       _connections: 1,
//       _handle: [TCP],
//       _usingWorkers: false,
//       _workers: [],
//       _unref: false,
//       allowHalfOpen: true,
//       pauseOnConnect: false,
//       httpAllowHalfOpen: false,
//       timeout: 0,
//       keepAliveTimeout: 5000,
//       maxHeadersCount: null,
//       headersTimeout: 60000,
//       requestTimeout: 0,
//       _connectionKey: '6::::5002',
//       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
//       [Symbol(ServerResponse)]: [Function: ServerResponse],
//       [Symbol(kCapture)]: false,
//       [Symbol(async_id_symbol)]: 17
//     },
//     parser: HTTPParser {
//       '0': [Function: bound setRequestTimeout],
//       '1': [Function: parserOnHeaders],
//       '2': [Function: parserOnHeadersComplete],
//       '3': [Function: parserOnBody],
//       '4': [Function: parserOnMessageComplete],
//       '5': [Function: bound onParserExecute],
//       '6': [Function: bound onParserTimeout],
//       _headers: [],
//       _url: '',
//       socket: [Circular *1],
//       incoming: [Circular *2],
//       outgoing: null,
//       maxHeaderPairs: 2000,
//       _consumed: true,
//       onIncoming: [Function: bound parserOnIncoming],
//       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
//     },
//     on: [Function: socketListenerWrap],
//     addListener: [Function: socketListenerWrap],
//     prependListener: [Function: socketListenerWrap],
//     _paused: false,
//     _httpMessage: ServerResponse {
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       outputData: [],
//       outputSize: 0,
//       writable: true,
//       destroyed: false,
//       _last: false,
//       chunkedEncoding: false,
//       shouldKeepAlive: true,
//       _defaultKeepAlive: true,
//       useChunkedEncodingByDefault: true,
//       sendDate: true,
//       _removedConnection: false,
//       _removedContLen: false,
//       _removedTE: false,
//       _contentLength: null,
//       _hasBody: true,
//       _trailer: '',
//       finished: false,
//       _headerSent: false,
//       socket: [Circular *1],
//       _header: null,
//       _keepAliveTimeout: 5000,
//       _onPendingData: [Function: bound updateOutgoingData],
//       _sent100: false,
//       _expect_continue: false,
//       req: [Circular *2],
//       locals: [Object: null prototype] {},
//       _startAt: undefined,
//       _startTime: undefined,
//       writeHead: [Function: writeHead],
//       __onFinished: [Function],
//       [Symbol(kCapture)]: false,
//       [Symbol(kNeedDrain)]: false,
//       [Symbol(corked)]: 0,
//       [Symbol(kOutHeaders)]: [Object: null prototype]
//     },
//     _peername: { address: '::1', family: 'IPv6', port: 52604 },
//     [Symbol(async_id_symbol)]: 20,
//     [Symbol(kHandle)]: TCP {
//       reading: true,
//       onconnection: null,
//       _consumed: true,
//       [Symbol(owner_symbol)]: [Circular *1]
//     },
//     [Symbol(kSetNoDelay)]: false,
//     [Symbol(lastWriteQueueSize)]: 0,
//     [Symbol(timeout)]: null,
//     [Symbol(kBuffer)]: null,
//     [Symbol(kBufferCb)]: null,
//     [Symbol(kBufferGen)]: null,
//     [Symbol(kCapture)]: false,
//     [Symbol(kBytesRead)]: 0,
//     [Symbol(kBytesWritten)]: 0,
//     [Symbol(RequestTimeout)]: undefined
//   },
//   _consuming: true,
//   _dumped: false,
//   next: [Function: next],
//   baseUrl: '',
//   originalUrl: '/api/upload',
//   _parsedUrl: Url {
//     protocol: null,
//     slashes: null,
//     auth: null,
//     host: null,
//     port: null,
//     hostname: null,
//     hash: null,
//     search: null,
//     query: null,
//     pathname: '/api/upload',
//     path: '/api/upload',
//     href: '/api/upload',
//     _raw: '/api/upload'
//   },
//   params: {},
//   query: {},
//   res: <ref *3> ServerResponse {
//     _events: [Object: null prototype] {
//       finish: [Array],
//       end: [Function: onevent]
//     },
//     _eventsCount: 2,
//     _maxListeners: undefined,
//     outputData: [],
//     outputSize: 0,
//     writable: true,
//     destroyed: false,
//     _last: false,
//     chunkedEncoding: false,
//     shouldKeepAlive: true,
//     _defaultKeepAlive: true,
//     useChunkedEncodingByDefault: true,
//     sendDate: true,
//     _removedConnection: false,
//     _removedContLen: false,
//     _removedTE: false,
//     _contentLength: null,
//     _hasBody: true,
//     _trailer: '',
//     finished: false,
//     _headerSent: false,
//     socket: <ref *1> Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       _paused: false,
//       _httpMessage: [Circular *3],
//       _peername: [Object],
//       [Symbol(async_id_symbol)]: 20,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _header: null,
//     _keepAliveTimeout: 5000,
//     _onPendingData: [Function: bound updateOutgoingData],
//     _sent100: false,
//     _expect_continue: false,
//     req: [Circular *2],
//     locals: [Object: null prototype] {},
//     _startAt: undefined,
//     _startTime: undefined,
//     writeHead: [Function: writeHead],
//     __onFinished: [Function: listener] { queue: [Array] },
//     [Symbol(kCapture)]: false,
//     [Symbol(kNeedDrain)]: false,
//     [Symbol(corked)]: 0,
//     [Symbol(kOutHeaders)]: [Object: null prototype] {
//       'x-powered-by': [Array],
//       vary: [Array],
//       'access-control-allow-credentials': [Array]
//     }
//   },
//   _startAt: [ 118489, 385651671 ],
//   _startTime: 2022-04-07T13:51:08.461Z,
//   _remoteAddress: '::1',
//   body: [Object: null prototype] { file: '[object Object]' },
//   route: Route {
//     path: '/api/upload',
//     stack: [ [Layer], [Layer] ],
//     methods: { post: true }
//   },
//   files: [Object: null prototype] {},
//   __onFinished: null,
//   [Symbol(kCapture)]: false,
//   [Symbol(RequestTimeout)]: undefined
// }
